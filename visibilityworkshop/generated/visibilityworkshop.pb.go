// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: visibilityworkshop.proto

package generated

import (
	context "context"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "source.vivint.com/pl/messagetypes/objectid"
	source_vivint_com_pl_messagetypes_objectid "source.vivint.com/pl/messagetypes/objectid"
	_ "source.vivint.com/pl/messagetypes/time"
	source_vivint_com_pl_messagetypes_time "source.vivint.com/pl/messagetypes/time"
	_ "source.vivint.com/pl/protoc-gen-voter/v2/definition"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type HelloWorldRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *HelloWorldRequest) Reset()         { *m = HelloWorldRequest{} }
func (m *HelloWorldRequest) String() string { return proto.CompactTextString(m) }
func (*HelloWorldRequest) ProtoMessage()    {}
func (*HelloWorldRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6460c56f7f361b6, []int{0}
}
func (m *HelloWorldRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloWorldRequest.Unmarshal(m, b)
}
func (m *HelloWorldRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloWorldRequest.Marshal(b, m, deterministic)
}
func (m *HelloWorldRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloWorldRequest.Merge(m, src)
}
func (m *HelloWorldRequest) XXX_Size() int {
	return xxx_messageInfo_HelloWorldRequest.Size(m)
}
func (m *HelloWorldRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloWorldRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloWorldRequest proto.InternalMessageInfo

func (m *HelloWorldRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Demonstrate bson tagging - i.e. simulating if this response was also persisted to mongo
type HelloWorldResponse struct {
	Id        *source_vivint_com_pl_messagetypes_objectid.MgoDriverObjectId `protobuf:"bytes,1,opt,name=id,proto3,customtype=source.vivint.com/pl/messagetypes/objectid.MgoDriverObjectId" json:"_id,omitempty" bson:"_id" msgpack:"_id"`
	Text      string                                                        `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Timestamp *source_vivint_com_pl_messagetypes_time.CustomTime            `protobuf:"bytes,3,opt,name=timestamp,proto3,customtype=source.vivint.com/pl/messagetypes/time.CustomTime" json:"ts,omitempty" bson:"ts" msgpack:"ts"`
}

func (m *HelloWorldResponse) Reset()         { *m = HelloWorldResponse{} }
func (m *HelloWorldResponse) String() string { return proto.CompactTextString(m) }
func (*HelloWorldResponse) ProtoMessage()    {}
func (*HelloWorldResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6460c56f7f361b6, []int{1}
}
func (m *HelloWorldResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloWorldResponse.Unmarshal(m, b)
}
func (m *HelloWorldResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloWorldResponse.Marshal(b, m, deterministic)
}
func (m *HelloWorldResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloWorldResponse.Merge(m, src)
}
func (m *HelloWorldResponse) XXX_Size() int {
	return xxx_messageInfo_HelloWorldResponse.Size(m)
}
func (m *HelloWorldResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloWorldResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HelloWorldResponse proto.InternalMessageInfo

func (m *HelloWorldResponse) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloWorldRequest)(nil), "visibilityworkshop.HelloWorldRequest")
	proto.RegisterType((*HelloWorldResponse)(nil), "visibilityworkshop.HelloWorldResponse")
}

func init() { proto.RegisterFile("visibilityworkshop.proto", fileDescriptor_d6460c56f7f361b6) }

var fileDescriptor_d6460c56f7f361b6 = []byte{
	// 875 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0x41, 0x8b, 0x1c, 0x45,
	0x14, 0xde, 0x99, 0x5d, 0x17, 0xd2, 0x1a, 0x30, 0xad, 0x84, 0xb5, 0x09, 0x3b, 0xc5, 0x80, 0xe2,
	0x61, 0xa7, 0x6b, 0x77, 0x04, 0xc1, 0xb0, 0xac, 0xce, 0xc6, 0x80, 0x1e, 0xa2, 0x32, 0x59, 0x4c,
	0xc8, 0x65, 0xa9, 0xee, 0x7e, 0xd3, 0x5d, 0x99, 0xea, 0x7e, 0x65, 0xd5, 0xeb, 0x9e, 0xcc, 0x41,
	0x04, 0x7f, 0x41, 0xd8, 0xdc, 0x3d, 0x78, 0xf0, 0x17, 0xf8, 0x07, 0xbc, 0x79, 0x14, 0x72, 0x91,
	0x20, 0x23, 0xb8, 0x9e, 0x72, 0xd4, 0x9b, 0x27, 0xe9, 0x9a, 0xde, 0xd9, 0x49, 0x76, 0x20, 0x7b,
	0x19, 0x5e, 0xbd, 0x7e, 0xdf, 0xf7, 0xbe, 0xf7, 0xbd, 0xee, 0x1a, 0x6f, 0xab, 0x92, 0x56, 0x46,
	0x52, 0x49, 0x9a, 0x4e, 0xd0, 0x8c, 0x6d, 0x86, 0x3a, 0xd4, 0x06, 0x09, 0x7d, 0xff, 0xe2, 0x93,
	0xe0, 0x41, 0x2a, 0x29, 0x2b, 0xa3, 0x30, 0xc6, 0x9c, 0xa7, 0x46, 0xc7, 0x3d, 0x88, 0xd1, 0x4e,
	0x2d, 0x41, 0x73, 0x4c, 0x05, 0xc1, 0x44, 0x4c, 0x39, 0x65, 0xd2, 0x24, 0xc7, 0x5a, 0x18, 0x9a,
	0xf2, 0x14, 0x31, 0x55, 0x20, 0xb4, 0xb4, 0x4d, 0xc8, 0x85, 0x96, 0x5c, 0x14, 0x05, 0x92, 0x20,
	0x89, 0x85, 0x9d, 0xf7, 0x0b, 0xee, 0x5e, 0x92, 0xdb, 0x55, 0xc7, 0xbd, 0x14, 0x8a, 0x9e, 0x9d,
	0x88, 0x34, 0x05, 0xc3, 0x51, 0x3b, 0xa2, 0x15, 0xa4, 0x1f, 0x2e, 0x91, 0xe6, 0x13, 0x49, 0x63,
	0x9c, 0xf0, 0x14, 0x7b, 0xee, 0x61, 0xaf, 0x12, 0x4a, 0x26, 0x82, 0xd0, 0x58, 0xbe, 0x08, 0x1b,
	0x5c, 0x6f, 0x59, 0x0c, 0xa6, 0x38, 0xef, 0x1a, 0x95, 0x23, 0x77, 0x72, 0x07, 0x17, 0x35, 0xe5,
	0x1f, 0x59, 0x2c, 0x4d, 0x0c, 0x61, 0x25, 0x2b, 0x59, 0x90, 0x43, 0x69, 0xc5, 0x73, 0xb0, 0x56,
	0xa4, 0x40, 0x53, 0x0d, 0x96, 0x63, 0xf4, 0x10, 0x62, 0x92, 0xc9, 0x22, 0x68, 0xa0, 0x7b, 0xaf,
	0x86, 0x92, 0xcc, 0xc1, 0xfd, 0x34, 0x90, 0x8f, 0x57, 0x42, 0x96, 0x7c, 0xa9, 0x90, 0xc0, 0xf0,
	0xaa, 0xcf, 0x13, 0x18, 0xc9, 0x42, 0xd6, 0x86, 0x70, 0x97, 0x9b, 0x13, 0x74, 0xb9, 0x77, 0xed,
	0x33, 0x50, 0x0a, 0xef, 0xa1, 0x51, 0xc9, 0x10, 0xbe, 0x29, 0xc1, 0x92, 0x1f, 0x78, 0x1b, 0x85,
	0xc8, 0x61, 0xab, 0xc5, 0x5a, 0xef, 0x5f, 0x39, 0xdc, 0xfc, 0xeb, 0xcf, 0x4e, 0xfb, 0x7e, 0x6b,
	0xe8, 0x72, 0xdd, 0x3f, 0xda, 0x9e, 0xbf, 0x8c, 0xb0, 0x1a, 0x0b, 0x0b, 0xfe, 0x0f, 0x2d, 0xaf,
	0x2d, 0x13, 0x87, 0x78, 0xbd, 0xff, 0x4e, 0xb8, 0x98, 0xec, 0x4b, 0x17, 0x7c, 0x9e, 0xdc, 0x99,
	0x4f, 0x71, 0x68, 0x9f, 0xcd, 0x3a, 0xfb, 0x97, 0xb7, 0x28, 0xbc, 0x93, 0xe2, 0xa7, 0x46, 0x56,
	0x60, 0xce, 0x88, 0x9e, 0xcf, 0x3a, 0x57, 0x8f, 0x65, 0xb2, 0x83, 0xb9, 0x24, 0xc8, 0x35, 0x4d,
	0xff, 0x99, 0x75, 0xb6, 0x22, 0x8b, 0xc5, 0xcd, 0xee, 0xb1, 0x4c, 0xba, 0x2c, 0xb7, 0xa9, 0x16,
	0xf1, 0x78, 0x7e, 0xaa, 0x95, 0xb3, 0xd6, 0xb0, 0x2d, 0x13, 0xdf, 0xf7, 0x36, 0x08, 0x1e, 0xd1,
	0x56, 0xbb, 0x9e, 0x69, 0xe8, 0x62, 0xff, 0x71, 0xcb, 0xbb, 0x52, 0x9b, 0x69, 0x49, 0xe4, 0x7a,
	0x6b, 0xdd, 0x69, 0xbf, 0x16, 0x3a, 0x7b, 0x8f, 0x64, 0x0e, 0x67, 0x9a, 0x8f, 0x9f, 0xcd, 0x3a,
	0x97, 0xdc, 0x4d, 0x78, 0xab, 0xb4, 0x84, 0x79, 0x8d, 0x7e, 0x3e, 0xeb, 0xbc, 0x41, 0xf6, 0x05,
	0x9d, 0xd7, 0xe7, 0x3a, 0xc9, 0x2e, 0xc9, 0x24, 0xdb, 0x1d, 0x9e, 0x8b, 0xe8, 0x3f, 0xdd, 0xf0,
	0xfc, 0xaf, 0x17, 0x5f, 0xdb, 0xbd, 0xe6, 0x6b, 0xf3, 0x7f, 0x5a, 0xf7, 0xbc, 0x73, 0xd7, 0xfd,
	0x77, 0xc3, 0x15, 0xdf, 0xea, 0x85, 0x3d, 0x06, 0xef, 0xbd, 0xaa, 0x6c, 0xbe, 0xbc, 0xee, 0xaf,
	0xed, 0x93, 0xc1, 0x8f, 0x6d, 0xff, 0xf6, 0xed, 0x47, 0x22, 0xd7, 0x0a, 0x98, 0xd1, 0x31, 0xcb,
	0x81, 0x32, 0x4c, 0x18, 0x21, 0xb3, 0x19, 0x4e, 0x58, 0x04, 0x4a, 0x59, 0x26, 0x8a, 0x84, 0x4d,
	0x32, 0x69, 0x49, 0x81, 0x65, 0xa2, 0x12, 0x52, 0x09, 0x15, 0x29, 0xa8, 0xab, 0x12, 0xa8, 0x40,
	0xa1, 0x06, 0x13, 0xfc, 0xdc, 0x3a, 0x6f, 0xc1, 0xa0, 0xa1, 0xa4, 0x4c, 0x90, 0x63, 0xb2, 0x0c,
	0x47, 0x23, 0x66, 0x31, 0x87, 0x55, 0x9c, 0x4a, 0x8e, 0x81, 0xd5, 0x2e, 0x31, 0x12, 0x69, 0x2a,
	0x8b, 0x94, 0xe1, 0x88, 0x51, 0x06, 0x2c, 0x85, 0x02, 0x8c, 0x20, 0x48, 0x98, 0x25, 0x53, 0xc6,
	0x54, 0x1a, 0xd8, 0x61, 0xb1, 0x33, 0x9b, 0x39, 0xfb, 0xd9, 0xc8, 0x60, 0xce, 0xb0, 0x34, 0x6c,
	0x79, 0x29, 0x4c, 0xc9, 0xc8, 0x08, 0x33, 0x9d, 0x13, 0x17, 0xa5, 0x52, 0x22, 0x52, 0xb0, 0xc3,
	0x6a, 0xc3, 0x77, 0x5c, 0xeb, 0xb3, 0x37, 0xad, 0xff, 0xa6, 0xd0, 0x5a, 0xc9, 0xd8, 0xdd, 0x19,
	0xfc, 0x61, 0xbd, 0xa8, 0x0b, 0x99, 0xef, 0x9f, 0xfe, 0xfd, 0xa4, 0x7d, 0xc3, 0x0f, 0x78, 0x33,
	0x55, 0xaf, 0xbe, 0xbe, 0xaa, 0x5d, 0x9e, 0xd5, 0xf3, 0x4e, 0xea, 0x79, 0x83, 0x27, 0xad, 0x93,
	0xc1, 0x81, 0xbf, 0x7f, 0x71, 0x85, 0xcc, 0x82, 0xa9, 0x64, 0x0c, 0x6c, 0x84, 0x86, 0xed, 0xef,
	0x33, 0x59, 0x58, 0x30, 0xc4, 0x12, 0xb0, 0xb1, 0x91, 0xee, 0xd2, 0x62, 0x19, 0x18, 0x60, 0x07,
	0x07, 0xff, 0xfd, 0xbb, 0xf9, 0x85, 0xbf, 0x3e, 0x28, 0xa6, 0xc1, 0x8d, 0xbb, 0x73, 0xcc, 0x20,
	0x8e, 0xb1, 0x2c, 0x68, 0x50, 0x52, 0x06, 0x05, 0x35, 0x8a, 0x82, 0xb7, 0x6f, 0x21, 0x8e, 0x25,
	0xbc, 0x94, 0x7d, 0xeb, 0x08, 0xc7, 0x50, 0xbc, 0x98, 0x3c, 0xfc, 0xa5, 0x75, 0x32, 0xf8, 0xce,
	0xff, 0xd6, 0x0b, 0x56, 0xe8, 0x6a, 0x7a, 0x74, 0xef, 0x7b, 0x57, 0xbf, 0x52, 0x82, 0x46, 0x68,
	0x72, 0x76, 0x04, 0x22, 0xf7, 0x79, 0x46, 0xa4, 0xed, 0x4d, 0xce, 0x57, 0xbe, 0xfa, 0x2b, 0xfe,
	0x12, 0xae, 0x47, 0x50, 0x84, 0xb9, 0xa0, 0x0c, 0x26, 0xf6, 0x93, 0xf3, 0xea, 0xfe, 0x6b, 0x7b,
	0xe1, 0x6e, 0xb8, 0xfb, 0xf8, 0x74, 0x7b, 0xed, 0xb7, 0xd3, 0xed, 0xb5, 0xdf, 0x4f, 0xb7, 0xd7,
	0x1e, 0xec, 0x5d, 0x92, 0x93, 0x2f, 0xf6, 0x1e, 0x6d, 0xba, 0x0b, 0xeb, 0x83, 0xff, 0x03, 0x00,
	0x00, 0xff, 0xff, 0x3e, 0xba, 0x25, 0xe3, 0xa7, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VisibilityWorkshopClient is the client API for VisibilityWorkshop service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VisibilityWorkshopClient interface {
	HelloWorld(ctx context.Context, in *HelloWorldRequest, opts ...grpc.CallOption) (*HelloWorldResponse, error)
}

type visibilityWorkshopClient struct {
	cc *grpc.ClientConn
}

func NewVisibilityWorkshopClient(cc *grpc.ClientConn) VisibilityWorkshopClient {
	return &visibilityWorkshopClient{cc}
}

func (c *visibilityWorkshopClient) HelloWorld(ctx context.Context, in *HelloWorldRequest, opts ...grpc.CallOption) (*HelloWorldResponse, error) {
	out := new(HelloWorldResponse)
	err := c.cc.Invoke(ctx, "/visibilityworkshop.VisibilityWorkshop/HelloWorld", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VisibilityWorkshopServer is the server API for VisibilityWorkshop service.
type VisibilityWorkshopServer interface {
	HelloWorld(context.Context, *HelloWorldRequest) (*HelloWorldResponse, error)
}

// UnimplementedVisibilityWorkshopServer can be embedded to have forward compatible implementations.
type UnimplementedVisibilityWorkshopServer struct {
}

func (*UnimplementedVisibilityWorkshopServer) HelloWorld(ctx context.Context, req *HelloWorldRequest) (*HelloWorldResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelloWorld not implemented")
}

func RegisterVisibilityWorkshopServer(s *grpc.Server, srv VisibilityWorkshopServer) {
	s.RegisterService(&_VisibilityWorkshop_serviceDesc, srv)
}

func _VisibilityWorkshop_HelloWorld_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloWorldRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VisibilityWorkshopServer).HelloWorld(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/visibilityworkshop.VisibilityWorkshop/HelloWorld",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VisibilityWorkshopServer).HelloWorld(ctx, req.(*HelloWorldRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VisibilityWorkshop_serviceDesc = grpc.ServiceDesc{
	ServiceName: "visibilityworkshop.VisibilityWorkshop",
	HandlerType: (*VisibilityWorkshopServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HelloWorld",
			Handler:    _VisibilityWorkshop_HelloWorld_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "visibilityworkshop.proto",
}
