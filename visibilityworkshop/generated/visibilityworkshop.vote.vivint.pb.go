// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: visibilityworkshop.proto

package generated

import (
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	google_golang_org_grpc "google.golang.org/grpc"
	_ "source.vivint.com/pl/messagetypes/objectid"
	_ "source.vivint.com/pl/messagetypes/time"
	_ "source.vivint.com/pl/protoc-gen-voter/v2/definition"
	source_vivint_com_pl_protoc_gen_voter_v2_plugin "source.vivint.com/pl/protoc-gen-voter/v2/plugin"
	source_vivint_com_pl_protoc_gen_voter_v2_plugin_scheme "source.vivint.com/pl/protoc-gen-voter/v2/plugin/scheme"
	source_vivint_com_pl_protoc_gen_voter_v2_plugin_voter "source.vivint.com/pl/protoc-gen-voter/v2/plugin/voter"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Custom Schemes
// These MUST be overridden by the end-user
var NewSchemeAny source_vivint_com_pl_protoc_gen_voter_v2_plugin_scheme.Newer

// Custom Voters
// These MUST be overridden by the end-user
var NewVoterCookieAuthentication source_vivint_com_pl_protoc_gen_voter_v2_plugin_voter.Newer
var NewVoterServiceAccountAuthentication source_vivint_com_pl_protoc_gen_voter_v2_plugin_voter.Newer
var NewVoterTokenAuthentication source_vivint_com_pl_protoc_gen_voter_v2_plugin_voter.Newer

// NewVoteInterceptor is a grpc interceptor that allows or denies rpc requests based on its config chain.
func NewVoteInterceptor() google_golang_org_grpc.UnaryServerInterceptor {
	if NewSchemeAny == nil || NewSchemeAny() == nil {
		panic("NewSchemeAny has not been specified.")
	}

	if NewVoterCookieAuthentication == nil || NewVoterCookieAuthentication() == nil {
		panic("NewVoterCookieAuthentication has not been specified.")
	}

	if NewVoterServiceAccountAuthentication == nil || NewVoterServiceAccountAuthentication() == nil {
		panic("NewVoterServiceAccountAuthentication has not been specified.")
	}

	if NewVoterTokenAuthentication == nil || NewVoterTokenAuthentication() == nil {
		panic("NewVoterTokenAuthentication has not been specified.")
	}

	mix1 := []source_vivint_com_pl_protoc_gen_voter_v2_plugin_scheme.Scheme{
		NewSchemeAny(NewVoterServiceAccountAuthentication(), NewVoterCookieAuthentication(), NewVoterTokenAuthentication()),
	}

	return source_vivint_com_pl_protoc_gen_voter_v2_plugin.NewInterceptor(
		map[string][]source_vivint_com_pl_protoc_gen_voter_v2_plugin_scheme.Scheme{
			"/visibilityworkshop.VisibilityWorkshop/HelloWorld": mix1,
		})
}
